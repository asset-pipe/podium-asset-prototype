import{isCEPolyfill as t}from"./dom.js";import{isTemplatePartActive as e}from"./template.js";class s{constructor(t,e,s){this._parts=[],this.template=t,this.processor=e,this.options=s}update(t){let e=0;for(const s of this._parts)void 0!==s&&s.setValue(t[e]),e++;for(const t of this._parts)void 0!==t&&t.commit()}_clone(){const s=t?this.template.element.content.cloneNode(!0):document.importNode(this.template.element.content,!0),o=this.template.parts;let n=0,i=0;const r=t=>{const s=document.createTreeWalker(t,133,null,!1);let p=s.nextNode();for(;n<o.length&&null!==p;){const t=o[n];if(e(t))if(i===t.index){if("node"===t.type){const t=this.processor.handleTextExpression(this.options);t.insertAfterNode(p.previousSibling),this._parts.push(t)}else this._parts.push(...this.processor.handleAttributeExpressions(p,t.name,t.strings,this.options));n++}else i++,"TEMPLATE"===p.nodeName&&r(p.content),p=s.nextNode();else this._parts.push(void 0),n++}};return r(s),t&&(document.adoptNode(s),customElements.upgrade(s)),s}}export{s as TemplateInstance};
